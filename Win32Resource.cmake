# ================================================================================================ #
#  CREATE_WIN32_RESOURCE_FILE( TARGET <target> [FILENAME <filename>] [ICON <icon>]                 #
#                              [COMPANY <company>] [DESCRIPTION <description>]                     #
#                              [COPYRIGHT <copyright>] [VERSION <version>] [OUTPUT <output>]       #
#                            )                                                                     #
#                                                                                                  #
# This function creates a Windows resource file.
#
# <target>        - Target whose properties are to be set
# <filename>      - Name of the output file without extension. If the name is missing, it is set to
#                   the name of the target.
# <icon>          - An icon for an executable file under Windows. A relative path to the RC file
#                   (OUTPUT) is required!
# <company>       - Company name for the Windows resource file.
# <description>   - Application/File description for the Windows resource file.
# <copyright>     - Copyright text for the Windows resource file.
# <version>       - Version number for the target. The default value is ${PROJECT_VERSION}.
# <output>        - Path of the output file (${BINARY_DIR}/${TARGET}.rc)

if(__create_win32_resource_file)
	return()
endif()
set(__create_win32_resource_file YES)

if(WIN32)
	function(create_win32_resource_file)
		set(options)
		set(oneValueArgs TARGET FILENAME ICON COMPANY DESCRIPTION COPYRIGHT VERSION OUTPUT)
		set(multiValueArgs)
		cmake_parse_arguments(APP "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
		if(NOT APP_TARGET)
			message(FATAL_ERROR "You must provide a target!")
		endif()
		if(NOT APP_FILENAME)
			set(APP_FILENAME $<TARGET_FILE_BASE_NAME:${APP_TARGET}>)
		endif()
		if(NOT APP_VERSION)
			set(APP_VERSION ${PROJECT_VERSION})
		endif()
		if(NOT APP_OUTPUT)
			get_target_property(_target_project_dir ${APP_TARGET} PROPERTY BINARY_DIR)
			set(APP_OUTPUT ${_target_project_dir}/${APP_TARGET}.rc)
		endif()
		string(REGEX MATCHALL "[.]" matches "${APP_VERSION}")
        list(LENGTH matches n_matches)
        while(n_matches LESS 3)
            string(APPEND APP_VERSION ".0")
            string(REGEX MATCHALL "[.]" matches "${APP_VERSION}")
            list(LENGTH matches n_matches)
        endwhile()
        string(REPLACE "." "," PC ${APP_VERSION})
        file(WRITE  ${APP_OUTPUT} "#include <winres.h>\n\n")
        if(APP_ICON)
            file(APPEND ${APP_OUTPUT} "MAINICON ICON \"${APP_ICON}\"\n\n")
        endif()
        file(APPEND ${APP_OUTPUT} "#define TARGET_NAME \"${APP_TARGET}\"\n")
        file(APPEND ${APP_OUTPUT} "#define FILE_VERSION_C ${PC}\n")
        file(APPEND ${APP_OUTPUT} "#define FILE_VERSION_S \"${APP_VERSION}\"\n")
		get_target_property(_type ${APP_TARGET} TYPE)
		if (${_type} STREQUAL "EXECUTABLE")
			set(_filetype "0x1L")
            file(APPEND ${APP_OUTPUT} "#define FILE_NAME \"${APP_FILENAME}.exe\"\n")
		else()
            set(_filetype "0x2L")
            file(APPEND ${APP_OUTPUT} "#ifdef NDEBUG\n")
            file(APPEND ${APP_OUTPUT} "#define FILE_NAME \"${APP_FILENAME}.dll\"\n")
            file(APPEND ${APP_OUTPUT} "#else\n")
            file(APPEND ${APP_OUTPUT} "#define FILE_NAME \"${APP_FILENAME}${CMAKE_DEBUG_POSTFIX}.dll\"\n")
            file(APPEND ${APP_OUTPUT} "#endif\n")
		endif()
        file(APPEND ${APP_OUTPUT} "\nVS_VERSION_INFO VERSIONINFO\n")
        file(APPEND ${APP_OUTPUT} " FILEVERSION FILE_VERSION_C\n")
        file(APPEND ${APP_OUTPUT} " PRODUCTVERSION FILE_VERSION_C\n")
        file(APPEND ${APP_OUTPUT} " FILEFLAGSMASK 0x3fL\n")
        file(APPEND ${APP_OUTPUT} "#ifdef _DEBUG\n")
        file(APPEND ${APP_OUTPUT} " FILEFLAGS 0x1L\n")
        file(APPEND ${APP_OUTPUT} "#else\n")
        file(APPEND ${APP_OUTPUT} " FILEFLAGS 0x0L\n")
        file(APPEND ${APP_OUTPUT} "#endif\n")
        file(APPEND ${APP_OUTPUT} " FILEOS 0x40004L\n")
        file(APPEND ${APP_OUTPUT} " FILETYPE ${_filetype}\n")
        file(APPEND ${APP_OUTPUT} " FILESUBTYPE 0x0L\n")
        file(APPEND ${APP_OUTPUT} "BEGIN\n")
        file(APPEND ${APP_OUTPUT} "    BLOCK \"StringFileInfo\"\n")
        file(APPEND ${APP_OUTPUT} "    BEGIN\n")
        file(APPEND ${APP_OUTPUT} "        BLOCK \"040704b0\"\n")
        file(APPEND ${APP_OUTPUT} "        BEGIN\n")
		if(APP_COMPANY)
			file(APPEND ${APP_OUTPUT} "            VALUE \"CompanyName\", \"${APP_COMPANY}\"\n")
		endif()
		if(APP_DESCRIPTION)
			file(APPEND ${APP_OUTPUT} "            VALUE \"FileDescription\", \"${APP_DESCRIPTION}\"\n")
		endif()
        file(APPEND ${APP_OUTPUT} "            VALUE \"FileVersion\", FILE_VERSION_S\n")
        file(APPEND ${APP_OUTPUT} "            VALUE \"InternalName\", FILE_NAME\n")
		if(APP_COPYRIGHT)
			file(APPEND ${APP_OUTPUT} "            VALUE \"LegalCopyright\", \"${APP_COPYRIGHT}\"\n")
		endif()
        file(APPEND ${APP_OUTPUT} "            VALUE \"OriginalFilename\", FILE_NAME\n")
        file(APPEND ${APP_OUTPUT} "            VALUE \"ProductName\", TARGET_NAME\n")
        file(APPEND ${APP_OUTPUT} "            VALUE \"ProductVersion\", FILE_VERSION_S\n")
        file(APPEND ${APP_OUTPUT} "        END\n")
        file(APPEND ${APP_OUTPUT} "    END\n")
        file(APPEND ${APP_OUTPUT} "    BLOCK \"VarFileInfo\"\n")
        file(APPEND ${APP_OUTPUT} "    BEGIN\n")
        file(APPEND ${APP_OUTPUT} "        VALUE \"Translation\", 0x407, 1200\n")
        file(APPEND ${APP_OUTPUT} "    END\n")
        file(APPEND ${APP_OUTPUT} "END\n")
        target_sources(${APP_TARGET} PRIVATE ${APP_OUTPUT})
	endfunction()
endif()
